{"queryPath":"/index.js","absPath":"/Users/caoyanling/Desktop/companyProject/lunbo/index.js","realPath":"/index.js","type":"script","source":"var Event = require('bcore/event');\nvar $ = require('jquery');\nvar _ = require('lodash');\n\n/**\n * swiper\n * */\nvar Swiper = require('swiper');\n/**\n * 马良基础类\n */\nmodule.exports = Event.extend(function Base(container, config) {\n  this.config = {\n    theme: {}\n  }\n  this.container = $(container);           //容器\n  this.apis = config.apis;                 //hook一定要有\n  this._data = null;                       //数据\n  this.chart = null;                       //图表\n  this.init(config);\n}, {\n  /**\n   * 公有初始化\n   */\n  init: function (config) {\n    //1.初始化,合并配置\n    this.mergeConfig(config);\n    //2.刷新布局,针对有子组件的组件 可有可无\n    this.updateLayout();\n    //3.子组件实例化\n    //this.chart = new Chart(this.container[0], this.config);\n    //4.如果有需要, 更新样式\n    this.updateStyle();\n  },\n  /**\n   * 绘制\n   * @param data\n   * @param options 不一定有\n   * !!注意: 第二个参数支持config, 就不需要updateOptions这个方法了\n   */\n  render: function (data, config) {\n    data = this.data(data);\n    var cfg = this.mergeConfig(config);\n\n\n    var html = `<div id=\"certify\" style=\"height:427px;overflow:hidden\"><div class=\"swiper-container\" style=\"height:427px;\"><div class=\"swiper-wrapper\" style=\"height:427px;\">`\n    \n    for (i = 0; i < data.length; i++) { \n      html += ` <div class=\"swiper-slide\">`\n      html += `<img src=${data[i]['image']} style='width:158px;height:102px;' />`\n      html += ` <p style=\"position:absolute;left:186px;top:6px;\">${data[i]['value']}</p>`\n      html += `<span style=\"position:absolute;left:186px;bottom:6px;\">2019/2/2</span>`\n      html += `<span style=\"position:absolute;right:14px;bottom:6px;\">35345</span>`\n      html += ` </div>`\n    }\n   html += `</div></div></div>`\n   this.container.html(html);\n\n    this.container.find(\".swiper-slide\").css({\n      width:\"583px\",\n      height:\"127px\",\n      background:\"rgba(38,186,241,0.55)\",\n      border:\"1px solid rgba(38,186,241,1)\",\n      marginBottom:\"29px\",\n      position:\"relative\",\n      padding:\"14px\"\n    })\n\n\n   new Swiper('#certify .swiper-container', {\n    watchSlidesProgress: true,\n    slidesPerView: 'auto',\n    centeredSlides: true,\n    direction: 'vertical',\n    loop: true, \n    autoplay: true,\n    loopedSlides: 5,\n    autoplay: true,\n    navigation: {\n      nextEl: '.swiper-button-next',\n      prevEl: '.swiper-button-prev',\n    },\n    pagination: {\n      el: '.swiper-pagination',\n      //clickable :true,\n    },\n    on: {\n      progress: function (progress) {\n        for (i = 0; i < this.slides.length; i++) {\n          var slide = this.slides.eq(i);\n          var slideProgress = this.slides[i].progress;\n          scale = 1 - Math.abs(slideProgress) / 4;\n          slide.transform('scale(' + scale + ')');\n        }\n      }\n    }\n\n  })\n\n\n\n\n   \n    //更新图表\n    //this.chart.render(data, cfg);\n    \n    //如果有需要的话,更新样式\n    this.updateStyle();\n  },\n  /**\n   *\n   * @param width\n   * @param height\n   */\n  resize: function (width, height) {\n    this.updateLayout(width, height);\n    //更新图表\n    //this.chart.render({\n    //  width: width,\n    //  height: height\n    //})\n  },\n  /**\n   * 每个组件根据自身需要,从主题中获取颜色 覆盖到自身配置的颜色中.\n   * 暂时可以不填内容\n   */\n  setColors: function () {\n    //比如\n    //var cfg = this.config;\n    //cfg.color = cfg.theme.series[0] || cfg.color;\n  },\n  /**\n   * 数据,设置和获取数据\n   * @param data\n   * @returns {*|number}\n   */\n  data: function (data) {\n    if (data) {\n      this._data = data;\n    }\n    return this._data;\n  },\n  /**\n   * 更新配置\n   * 优先级: config.colors > config.theme > this.config.theme > this.config.colors\n   * [注] 有数组的配置一定要替换\n   * @param config\n   * @private\n   */\n  mergeConfig: function (config) {\n    if (!config) {return this.config}\n    this.config.theme = _.defaultsDeep(config.theme || {}, this.config.theme);\n    this.setColors();\n    this.config = _.defaultsDeep(config || {}, this.config);\n    return this.config;\n  },\n  /**\n   * 更新布局\n   * 可有可无\n   */\n  updateLayout: function () {},\n  /**\n   * 更新样式\n   * 有些子组件控制不到的,但是需要控制改变的,在这里实现\n   */\n  updateStyle: function () {\n    var cfg = this.config;\n    this.container.css({\n      'font-size': cfg.size + 'px',\n      'color': cfg.color || '#fff'\n    });\n  },\n  /**\n   * 更新配置\n   * !!注意:如果render支持第二个参数options, 那updateOptions不是必须的\n   */\n  //updateOptions: function (options) {},\n  /**\n   * 更新某些配置\n   * 给可以增量更新配置的组件用\n   */\n  //updateXXX: function () {},\n  /**\n   * 销毁组件\n   */\n   destroy: function(){console.log('请实现 destroy 方法')}\n});","code":"'use strict';\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Event = require('bcore/event');\nvar $ = require('jquery');\nvar _ = require('lodash');\n\nvar Swiper = require('swiper');\n\nmodule.exports = Event.extend(function Base(container, config) {\n  this.config = {\n    theme: {}\n  };\n  this.container = $(container);\n  this.apis = config.apis;\n  this._data = null;\n  this.chart = null;\n  this.init(config);\n}, {\n  init: function init(config) {\n    this.mergeConfig(config);\n\n    this.updateLayout();\n\n    this.updateStyle();\n  },\n\n  render: function render(data, config) {\n    var _ref;\n\n    data = this.data(data);\n    var cfg = this.mergeConfig(config);\n\n    var html = '<div id=\"certify\" style=\"height:427px;overflow:hidden\"><div class=\"swiper-container\" style=\"height:427px;\"><div class=\"swiper-wrapper\" style=\"height:427px;\">';\n\n    for (i = 0; i < data.length; i++) {\n      html += ' <div class=\"swiper-slide\">';\n      html += '<img src=' + data[i]['image'] + ' style=\\'width:158px;height:102px;\\' />';\n      html += ' <p style=\"position:absolute;left:186px;top:6px;\">' + data[i]['value'] + '</p>';\n      html += '<span style=\"position:absolute;left:186px;bottom:6px;\">2019/2/2</span>';\n      html += '<span style=\"position:absolute;right:14px;bottom:6px;\">35345</span>';\n      html += ' </div>';\n    }\n    html += '</div></div></div>';\n    this.container.html(html);\n\n    this.container.find(\".swiper-slide\").css({\n      width: \"583px\",\n      height: \"127px\",\n      background: \"rgba(38,186,241,0.55)\",\n      border: \"1px solid rgba(38,186,241,1)\",\n      marginBottom: \"29px\",\n      position: \"relative\",\n      padding: \"14px\"\n    });\n\n    new Swiper('#certify .swiper-container', (_ref = {\n      watchSlidesProgress: true,\n      slidesPerView: 'auto',\n      centeredSlides: true,\n      direction: 'vertical',\n      loop: true,\n      autoplay: true,\n      loopedSlides: 5\n    }, _defineProperty(_ref, 'autoplay', true), _defineProperty(_ref, 'navigation', {\n      nextEl: '.swiper-button-next',\n      prevEl: '.swiper-button-prev'\n    }), _defineProperty(_ref, 'pagination', {\n      el: '.swiper-pagination'\n    }), _defineProperty(_ref, 'on', {\n      progress: function progress(_progress) {\n        for (i = 0; i < this.slides.length; i++) {\n          var slide = this.slides.eq(i);\n          var slideProgress = this.slides[i].progress;\n          scale = 1 - Math.abs(slideProgress) / 4;\n          slide.transform('scale(' + scale + ')');\n        }\n      }\n    }), _ref));\n\n    this.updateStyle();\n  },\n\n  resize: function resize(width, height) {\n    this.updateLayout(width, height);\n  },\n\n  setColors: function setColors() {},\n\n  data: function data(_data) {\n    if (_data) {\n      this._data = _data;\n    }\n    return this._data;\n  },\n\n  mergeConfig: function mergeConfig(config) {\n    if (!config) {\n      return this.config;\n    }\n    this.config.theme = _.defaultsDeep(config.theme || {}, this.config.theme);\n    this.setColors();\n    this.config = _.defaultsDeep(config || {}, this.config);\n    return this.config;\n  },\n\n  updateLayout: function updateLayout() {},\n\n  updateStyle: function updateStyle() {\n    var cfg = this.config;\n    this.container.css({\n      'font-size': cfg.size + 'px',\n      'color': cfg.color || '#fff'\n    });\n  },\n\n  destroy: function destroy() {\n    console.log('请实现 destroy 方法');\n  }\n});","codeWraped":"Cube(\"/index.js\", [\"/node_modules/bcore/event.js\", \"/node_modules/jquery/dist/jquery.js\", \"/node_modules/lodash/lodash.js\", \"/node_modules/swiper/js/swiper.js\"], function (module, exports, require, load, process, global) {\n\n  function _defineProperty(obj, key, value) {if (key in obj) {Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });} else {obj[key] = value;}return obj;}\n\n  var Event = require('/node_modules/bcore/event.js');\n  var $ = require('/node_modules/jquery/dist/jquery.js');\n  var _ = require('/node_modules/lodash/lodash.js');\n\n  var Swiper = require('/node_modules/swiper/js/swiper.js');\n\n  module.exports = Event.extend(function Base(container, config) {\n    this.config = {\n      theme: {} };\n\n    this.container = $(container);\n    this.apis = config.apis;\n    this._data = null;\n    this.chart = null;\n    this.init(config);\n  }, {\n    init: function init(config) {\n      this.mergeConfig(config);\n\n      this.updateLayout();\n\n      this.updateStyle();\n    },\n\n    render: function render(data, config) {\n      var _ref;\n\n      data = this.data(data);\n      var cfg = this.mergeConfig(config);\n\n      var html = '<div id=\"certify\" style=\"height:427px;overflow:hidden\"><div class=\"swiper-container\" style=\"height:427px;\"><div class=\"swiper-wrapper\" style=\"height:427px;\">';\n\n      for (i = 0; i < data.length; i++) {\n        html += ' <div class=\"swiper-slide\">';\n        html += '<img src=' + data[i]['image'] + ' style=\\'width:158px;height:102px;\\' />';\n        html += ' <p style=\"position:absolute;left:186px;top:6px;\">' + data[i]['value'] + '</p>';\n        html += '<span style=\"position:absolute;left:186px;bottom:6px;\">2019/2/2</span>';\n        html += '<span style=\"position:absolute;right:14px;bottom:6px;\">35345</span>';\n        html += ' </div>';\n      }\n      html += '</div></div></div>';\n      this.container.html(html);\n\n      this.container.find(\".swiper-slide\").css({\n        width: \"583px\",\n        height: \"127px\",\n        background: \"rgba(38,186,241,0.55)\",\n        border: \"1px solid rgba(38,186,241,1)\",\n        marginBottom: \"29px\",\n        position: \"relative\",\n        padding: \"14px\" });\n\n\n      new Swiper('#certify .swiper-container', (_ref = {\n        watchSlidesProgress: true,\n        slidesPerView: 'auto',\n        centeredSlides: true,\n        direction: 'vertical',\n        loop: true,\n        autoplay: true,\n        loopedSlides: 5 },\n      _defineProperty(_ref, 'autoplay', true), _defineProperty(_ref, 'navigation', {\n        nextEl: '.swiper-button-next',\n        prevEl: '.swiper-button-prev' }),\n      _defineProperty(_ref, 'pagination', {\n        el: '.swiper-pagination' }),\n      _defineProperty(_ref, 'on', {\n        progress: function progress(_progress) {\n          for (i = 0; i < this.slides.length; i++) {\n            var slide = this.slides.eq(i);\n            var slideProgress = this.slides[i].progress;\n            scale = 1 - Math.abs(slideProgress) / 4;\n            slide.transform('scale(' + scale + ')');\n          }\n        } }),\n      _ref));\n\n      this.updateStyle();\n    },\n\n    resize: function resize(width, height) {\n      this.updateLayout(width, height);\n    },\n\n    setColors: function setColors() {},\n\n    data: function data(_data) {\n      if (_data) {\n        this._data = _data;\n      }\n      return this._data;\n    },\n\n    mergeConfig: function mergeConfig(config) {\n      if (!config) {\n        return this.config;\n      }\n      this.config.theme = _.defaultsDeep(config.theme || {}, this.config.theme);\n      this.setColors();\n      this.config = _.defaultsDeep(config || {}, this.config);\n      return this.config;\n    },\n\n    updateLayout: function updateLayout() {},\n\n    updateStyle: function updateStyle() {\n      var cfg = this.config;\n      this.container.css({\n        'font-size': cfg.size + 'px',\n        'color': cfg.color || '#fff' });\n\n    },\n\n    destroy: function destroy() {\n      console.log('请实现 destroy 方法');\n    } });return module.exports;});","sourceMap":null,"modifyTime":1585712640832,"mime":"application/javascript","wrap":true,"skip":false,"compress":false,"ext":".js","targetExt":".js","loads":[],"originalLoads":[],"requires":["/node_modules/bcore/event.js","/node_modules/jquery/dist/jquery.js","/node_modules/lodash/lodash.js","/node_modules/swiper/js/swiper.js"],"requiresOrigin":["/node_modules/bcore/event.js","/node_modules/jquery/dist/jquery.js","/node_modules/lodash/lodash.js","/node_modules/swiper/js/swiper.js"],"debugInfo":[],"requiresArgsRefer":[{"type":"StringLiteral","start":246,"end":259,"loc":{"start":{"line":5,"column":20},"end":{"line":5,"column":33}},"extra":{"rawValue":"bcore/event","raw":"'bcore/event'"},"value":"/node_modules/bcore/event.js"},{"type":"StringLiteral","start":278,"end":286,"loc":{"start":{"line":6,"column":16},"end":{"line":6,"column":24}},"extra":{"rawValue":"jquery","raw":"'jquery'"},"value":"/node_modules/jquery/dist/jquery.js"},{"type":"StringLiteral","start":305,"end":313,"loc":{"start":{"line":7,"column":16},"end":{"line":7,"column":24}},"extra":{"rawValue":"lodash","raw":"'lodash'"},"value":"/node_modules/lodash/lodash.js"},{"type":"StringLiteral","start":338,"end":346,"loc":{"start":{"line":9,"column":21},"end":{"line":9,"column":29}},"extra":{"rawValue":"swiper","raw":"'swiper'"},"value":"/node_modules/swiper/js/swiper.js"}]}